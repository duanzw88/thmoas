GTK+基本概念

物件(GtkWidget):
	GTK+中每个窗口里的组成要素都被视为一个物件，如按钮、文本等，窗口本身也是一个物件。
	总之GTK+的界面就是由物件构成。注意，物件都是使用指针来管理，物件外在表现就是一个特定类型的指针。

容器(GtkContainer):
	物件里的一大类，容器的特点是器内容能够容纳其他物件。容器最基本的功能之一是将各种物件良好的组织起来。
	GTK+的容器能在大小改变时自动调整内涵物件的大小，这使得GTK+能够狠智能的相应窗口或其他物件的大小改变

继承、组合:
	GTK+灵活的运用了面向对象思想。GTK+的物件体系中就有继承、组合这样的关系。
	如窗口(GtkWindow)是由容器(GtkContainer)派生出来的。

类型转换宏:
	C语言本身没有“继承”的概念，如果直接把派生的物件直接当做基本物件使用，会出现编译警告，即“隐式指针类型转换”，但不会出错。
	为了消除这个警告，需要做指针类型转换，一般情况下类型转换使用类型转换宏
	类型转换宏内部会检查物件的继承关系，确定能否进行转换，然后再做显示类型转换。

事件(event):
	用户的操作，比如按下某个按钮或者快捷键，被视为一个事件。

信号(signal):
	GTK+是基于信号回调(signal-slot)机制的。
	信号捆绑了一个事件和一个函数，在用户触发这个事件时，这个函数会被调用一次

主循环(main loop):
	GTK+程序在一个主循环中运行，当一个事件被触发时，它将被插入队列中，
	在主循环中被触发的事件会被逐个处理(和这个事件绑定的函数被逐个调用)
	没有事件被触发时，程序处于等待状态
	直到退出主循环的函数被调用，GTK+程序才结束

GTK+命名规范:
	普通变量:全小写写法 以“g”开头
	物件类型:驼峰写法(首字母大写) 以“Gtk”开头
	函数名:小写夹下划线，以“gtk_”为前缀
	常数名:大写夹下划线,以“GTK_”为前缀
	类型转换宏:大写夹下划线,以“GTK_”为前缀，一般来说，宏名字和类型名相仿，比如要把GtkWindow*类型的物件转换为GtkContainer 就使用宏GTK_COTAINER()